import { useRuntimeConfig, useAsyncData, createError } from "#imports";

import { useRoute } from "#app";
export const useDbArticle = async (fields = []) => {
  const route = useRoute();
  const {
    public: {
      blog: { baseUrl, collection, productId },
    },
  } = useRuntimeConfig();

  const { data, error } = await useAsyncData("blog-detail", () => {
    return $fetch(`${baseUrl}/items/${collection}`, {
      params: {
        fields: [
          "id",
          "title",
          "date_created",
          "tags.bg_tags_id.label",
          "tags.bg_tags_id.slug",
          "cover.id",
          "cover.filename_disk",
          "summary",
          "sections.item.id",
          "sections.collection",
          "sections.item.metadata.component.name",
          "sections.item.*.*.*",
          "author.first_name",
          "author.last_name",
          "author.email",
          "author.avatar.*",
          "author.description",
          ...fields,
        ],
        filter: {
          product: {
            id: productId,
          },
          slug: route.params.slug.at(-1),
        },
      },
    });
  });

  if (error.value) {
    throw createError({
      statusCode: error.value.statusCode,
      statusMessage: error.value.message,
    });
  } else if (data.value.data.length === 0) {
    throw createError({ statusCode: 404, statusMessage: "Page Not Found" });
  } else {
    return {
      data: data.value.data[0],
    };
  }
};
